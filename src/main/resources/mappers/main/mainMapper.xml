<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ade.portfolio.main.mapper.MainMapper">

    <select id="selectTopInfo" parameterType="hashmap" resultType="hashmap">
        SELECT  BASE_DATE                                               AS BASE_DATE
        ,       TO_CHAR(TOT_BUY_AMT, 'FM999,999,999,999')               AS TOT_BUY_AMT
        ,       TO_CHAR(TOT_EST_AMT, 'FM999,999,999,999')               AS TOT_EST_AMT
        ,       NVL((
                    SELECT 	TRD_EXCH_RATE
                    FROM 	ADEXRT
                    WHERE 	BASE_DATE 	= FUNC_GET_MAX('ADEXRT')
                    AND 	CUR_C 		= 'USD'
                ), 0)                                                   AS EXRT_RATE
        ,       TO_CHAR(FUNC_RN(YIELD , 3) * 100  , 'FM990.90') || '%'  AS YIELD
        FROM    ADESTM
        WHERE   BASE_DATE = (SELECT MAX(EE.BASE_DATE) FROM ADESTM EE)
    </select>

    <select id="selectItemChart" parameterType="hashmap" resultType="hashmap">
        SELECT  B.BASE_DATE                             AS BASE_DATE
        ,      	B.STND_ITEM_C                           AS STND_ITEM_C
        ,      	I.ITEM_SHORT                            AS ITEM_SHORT
        ,      	FUNC_RN((B.BUY_AMT * B.QUANTITY) , 2)   AS BUY_AMT
        ,      	FUNC_RN((B.EST_AMT * B.QUANTITY) , 2)   AS EST_AMT
        FROM    ADBASE  B
        ,      	ADITEM  I
        WHERE   B.BASE_DATE    = (SELECT MAX(BB.BASE_DATE) FROM ADBASE BB)
        AND     B.STND_ITEM_C  = I.STND_ITEM_C
        ORDER BY I.ITEM_SHORT
    </select>

    <select id="selectBaseChart" parameterType="hashmap" resultType="hashmap">
        /* 총 잔고금액(차트) */
        SELECT  FUNC_CONV_DATE(BASE_MONTH, '-', 'B')                        AS BASE_MONTH
        ,       FUNC_RN(TOT_AMT/1000, 0)                                    AS TOT_AMT
        ,       FUNC_RN(TOT_ESTM_AMT /1000, 0)                              AS TOT_ESTM_AMT
        ,       FUNC_RN((TOT_ESTM_AMT - TOT_AMT) / TOT_ESTM_AMT * 100, 2)   AS YIELD
        FROM
        (
            SELECT  S.BASE_MONTH                                                                                             AS BASE_MONTH
            ,       FUNC_GET_EXRT(FUNC_GET_BUSI_DAY(FUNC_GET_MAX('ADBASE'), 'B'), 'USD', S.TOT_AMT) + P.TOT_AMT              AS TOT_AMT
            ,       FUNC_GET_EXRT(FUNC_GET_BUSI_DAY(FUNC_GET_MAX('ADBASE'), 'B'), 'USD', S.TOT_ESTM_AMT) + P.TOT_ESTM_AMT    AS TOT_ESTM_AMT
            FROM
            (
                SELECT  BASE_MONTH              AS BASE_MONTH
                ,       SUM(B.TOT_AMT)          AS TOT_AMT
                ,       SUM(B.TOT_ESTM_AMT)     AS TOT_ESTM_AMT
                FROM    ADBSRT  B
                ,       ADITEM  I
                WHERE   B.STND_ITEM_C = I.STND_ITEM_C
                AND     I.ASTS_GD_TC  IN (SELECT CODE FROM ADCDGR WHERE CODE_GROUP = 'STCK')
                GROUP BY BASE_MONTH
                ORDER BY BASE_MONTH
            )   S,
            (
                SELECT  BASE_MONTH              AS BASE_MONTH
                ,       SUM(B.TOT_AMT)          AS TOT_AMT
                ,       SUM(B.TOT_ESTM_AMT)     AS TOT_ESTM_AMT
                FROM    ADBSRT  B
                ,       ADITEM  I
                WHERE   B.STND_ITEM_C = I.STND_ITEM_C
                AND     I.ASTS_GD_TC  IN (SELECT CODE FROM ADCDGR WHERE CODE_GROUP = 'FUND')
                GROUP BY BASE_MONTH
                ORDER BY BASE_MONTH
            )   P
            WHERE    S.BASE_MONTH = P.BASE_MONTH
        )
        ORDER BY FUNC_CONV_DATE(BASE_MONTH, '-', 'B')
    </select>

    <select id="selectRatioChart" parameterType="hashmap" resultType="hashmap">
        /* 종목비율(차트) */
        SELECT  B.BASE_MONTH                    AS BASE_MONTH
        ,       B.STND_ITEM_C                   AS STND_ITEM_C
        ,       I.ITEM_SHORT                    AS ITEM_SHORT
        ,       FUNC_RN(B.ESTM_RATIO, 3) * 100  AS ESTM_RATIO
        FROM    ADBSRT  B
        ,       ADITEM  I
        WHERE   B.BASE_MONTH   = (SELECT MAX(BB.BASE_MONTH) FROM ADBSRT BB)
        AND     B.STND_ITEM_C  = I.STND_ITEM_C
        AND     I.ASTS_GD_TC   IN ('S', 'E')
    </select>

    <select id="selectFundRatioChart" parameterType="hashmap" resultType="hashmap">
        /* 펀드비율(차트) */
        SELECT  B.BASE_MONTH                    AS BASE_MONTH
        ,       B.STND_ITEM_C                   AS STND_ITEM_C
        ,       I.ITEM_SHORT                    AS ITEM_SHORT
        ,       FUNC_RN(B.ESTM_RATIO, 3) * 100  AS ESTM_RATIO
        FROM    ADBSRT  B
        ,       ADITEM  I
        WHERE   B.BASE_MONTH  = (SELECT MAX(BB.BASE_MONTH) FROM ADBSRT BB)
        AND     B.STND_ITEM_C = I.STND_ITEM_C
        AND     I.ASTS_GD_TC  IN ('P', 'R')
    </select>

    <select id="selectItemList" parameterType="hashmap" resultType="hashmap">
        WITH ITEMLIST AS
        (
            SELECT  B.BASE_DATE                                                         AS BASE_DATE
            ,       B.STND_ITEM_C                                                       AS STND_ITEM_C
            ,       I.ITEM_SHORT                                                        AS ITEM_SHORT
            ,       FUNC_GET_EXRT(B.BASE_DATE, 'USD', FUNC_RN(B.BUY_AMT * QUANTITY, 2)) AS BUY_AMT
            ,       FUNC_GET_EXRT(B.BASE_DATE, 'USD', FUNC_RN(B.EST_AMT * QUANTITY, 2)) AS EST_AMT
            FROM    ADITEM    I
            ,       ADBASE    B
            WHERE   I.STND_ITEM_C = B.STND_ITEM_C
            AND     B.BASE_DATE   = (SELECT MAX(BB.BASE_DATE) FROM ADBASE BB)
            UNION ALL
            SELECT  F.BASE_DATE                         AS BASE_DATE
            ,       F.STND_ITEM_C                       AS STND_ITEM_C
            ,       I.ITEM_SHORT                        AS ITEM_SHORT
            ,       F.TOT_BUY_AMT                       AS BUY_AMT
            ,       F.TOT_EST_AMT                       AS EST_AMT
            FROM    ADITEM    I
            ,       ADFUND    F
            WHERE   I.STND_ITEM_C = F.STND_ITEM_C
            AND     F.BASE_DATE   = (SELECT MAX(FF.BASE_DATE) FROM ADFUND FF)
        )
        SELECT  FUNC_CONV_DATE(BASE_DATE, '-')          AS BASE_DATE
        ,       STND_ITEM_C                             AS STND_ITEM_C
        ,       ITEM_SHORT                              AS ITEM_SHORT
        ,       TO_CHAR(BUY_AMT, 'FM999,999,999,999')   AS BUY_AMT
        ,       TO_CHAR(EST_AMT, 'FM999,999,999,999')   AS EST_AMT
        ,       TO_CHAR(((EST_AMT - BUY_AMT) / BUY_AMT) * 100, 'FM990.90') || '%'   AS YIELD
        FROM    ITEMLIST
    </select>

    <insert id="PROC_TRIS_TO_TRIS" parameterType="hashmap" statementType="CALLABLE">
        {   CALL  ADMIN.PROC_TRIS_TO_TRIS
            (
                #{TR_DATE},
                #{STND_ITEM_C   , mode=IN, jdbcType=VARCHAR},
                #{TR_PRICE      , mode=IN, jdbcType=INTEGER},
                #{TR_QUANTITY   , mode=IN, jdbcType=INTEGER}
            )
        }
    </insert>

    <insert id="PROC_FUND_TO_FUND" parameterType="hashmap" statementType="CALLABLE">
        {   CALL  ADMIN.PROC_FUND_TO_FUND
            (
                #{BASE_DATE     , mode=IN, jdbcType=VARCHAR},
                #{STND_ITEM_C   , mode=IN, jdbcType=VARCHAR},
                #{TOT_BUY_AMT   , mode=IN, jdbcType=INTEGER},
                #{TOT_EST_AMT   , mode=IN, jdbcType=INTEGER}
            )
        }
    </insert>

    <insert id="PROC_TRIS_TO_BASE" parameterType="hashmap" statementType="CALLABLE">
        {
            CALL  ADMIN.PROC_TRIS_TO_BASE(#{BASE_DATE},#{STND_ITEM_C, mode=IN, jdbcType=VARCHAR})
        }
    </insert>

    <insert id="PROC_BASE_TO_ONE" parameterType="hashmap" statementType="CALLABLE">
        {
            CALL  ADMIN.PROC_BASE_TO_ONE(#{BASE_DATE, mode=IN, jdbcType=VARCHAR})
        }
    </insert>

    <insert id="PROC_BASE_TO_RATIO" parameterType="hashmap" statementType="CALLABLE">
        {
            CALL  ADMIN.PROC_BASE_TO_RATIO(#{BASE_DATE, mode=IN, jdbcType=VARCHAR})
        }
    </insert>

    <insert id="PROC_FUND_TO_RATIO" parameterType="hashmap" statementType="CALLABLE">
        {
            CALL  ADMIN.PROC_FUND_TO_RATIO(#{BASE_DATE, mode=IN, jdbcType=VARCHAR})
        }
    </insert>

    <insert id="PROC_BASE_TO_ESTM" parameterType="hashmap" statementType="CALLABLE">
        {
            CALL  ADMIN.PROC_BASE_TO_ESTM(#{BASE_DATE, mode=IN, jdbcType=VARCHAR})
        }
    </insert>

    <select id="selectBusiDay" parameterType="hashmap" resultType="hashmap">
        SELECT 	FUNC_GET_BUSI_DAY(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'B')    AS BASE_DATE
        FROM 	DUAL
    </select>

    <select id="selectBeforeBusiDay" parameterType="hashmap" resultType="hashmap">
        SELECT 	FUNC_GET_BUSI_DAY(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'BB')    AS BASE_DATE
        FROM 	DUAL
    </select>

    <select id="selectPriceList" parameterType="hashmap" resultType="hashmap">
        SELECT 	BASE_DATE       AS BASE_DATE
        ,       STND_ITEM_C     AS STND_ITEM_C
        ,       PRICE           AS PRICE
        ,       CUR_C           AS CUR_C
        FROM 	ADPRIF
        WHERE   BASE_DATE = #{BASE_DATE}
    </select>

    <select id="selectTrisList" parameterType="hashmap" resultType="hashmap">
        SELECT 	TR_DATE         AS TR_DATE
        ,       STND_ITEM_C     AS STND_ITEM_C
        ,       ITEM_NAME       AS ITEM_NAME
        ,       TR_PRICE        AS TR_PRICE
        ,       TR_QUANTITY     AS TR_QUANTITY
        ,       TR_COST         AS TR_COST
        ,       F_TR_COST       AS F_TR_COST
        ,       TR_AMT          AS TR_AMT
        ,       F_TR_AMT        AS F_TR_AMT
        FROM 	ADTRIS
        WHERE   TR_DATE     = #{TR_DATE}
        AND     STND_ITEM_C = #{STND_ITEM_C}
    </select>

    <select id="selectStndItemCList" parameterType="hashmap" resultType="hashmap">
        SELECT 	STND_ITEM_C     AS STND_ITEM_C
        ,       ITEM_SHORT      AS ITEM_SHORT
        FROM 	ADITEM
        WHERE   ASTS_GD_TC  IN ('S', 'E')
    </select>

    <select id="selectFundCList" parameterType="hashmap" resultType="hashmap">
        SELECT 	STND_ITEM_C     AS STND_ITEM_C
        ,       ITEM_SHORT      AS ITEM_SHORT
        FROM 	ADITEM
        WHERE   ASTS_GD_TC  IN ('P', 'R')
    </select>

    <select id="selectFundList" parameterType="hashmap" resultType="hashmap">
        SELECT 	STND_ITEM_C     AS STND_ITEM_C
        ,       ITEM_SHORT      AS ITEM_SHORT
        FROM 	ADFUND
        WHERE   BASE_DATE       = #{BASE_DATE}
        AND     STND_ITEM_C     = #{STND_ITEM_C}
    </select>

    <select id="selectExchRateList" parameterType="com.ade.portfolio.main.model.MainVO" resultType="com.ade.portfolio.main.model.MainVO">
        SELECT 	BASE_DATE       AS baseDate
        ,       CUR_C           AS curC
        ,       TRD_EXCH_RATE   AS exchRate
        FROM 	ADEXRT
        WHERE   BASE_DATE       = #{baseDate}
        AND     CUR_C           = #{curC}
    </select>

    <select id="selectCurCList" parameterType="com.ade.portfolio.main.model.MainVO" resultType="com.ade.portfolio.main.model.MainVO">
        SELECT 	TRIM(CODE)  AS curC
        FROM 	ADCDGR
        WHERE   CODE_ID     = 'CUR_C'
    </select>

    <select id="selectGetPriceItemList" parameterType="com.ade.portfolio.main.model.MainVO" resultType="com.ade.portfolio.main.model.MainVO">
        SELECT 	STND_ITEM_C  AS stndItemC
        FROM 	ADITEM
        WHERE   ASTS_GD_TC  IN (SELECT CODE FROM ADCDGR WHERE CODE_GROUP = 'STCK')
    </select>

    <select id="selectADPRIF" parameterType="com.ade.portfolio.main.model.MainVO" resultType="com.ade.portfolio.main.model.MainVO">
        SELECT 	STND_ITEM_C  AS stndItemC
        FROM 	ADPRIF
        WHERE   BASE_DATE   = #{baseDate}
        AND     STND_ITEM_C = #{stndItemC}
    </select>

    <insert id="insertADEXRT" parameterType="com.ade.portfolio.main.model.MainVO">
        INSERT INTO ADEXRT
        (       BASE_DATE
        ,       CUR_C
        ,       TRD_EXCH_RATE
        ,       LST_CHNG_NAME
        ,       LST_CHNG_TIME
        ) VALUES
        (       #{baseDate}
        ,       #{curC}
        ,       #{exchRate}
        ,       'ADE'
        ,       CURRENT_DATE
        )
    </insert>

    <insert id="insertADPRIF" parameterType="com.ade.portfolio.main.model.MainVO">
        INSERT INTO ADPRIF
        (       BASE_DATE
        ,       STND_ITEM_C
        ,       PRICE
        ,       CUR_C
        ,       LST_CHNG_NAME
        ,       LST_CHNG_TIME
        ) VALUES
        (       #{baseDate}
        ,       #{stndItemC}
        ,       #{price}
        ,       #{curC}
        ,       'ADE'
        ,       CURRENT_DATE
        )
    </insert>

    <select id="selectADBASECheck" parameterType="hashmap" resultType="hashmap">
        SELECT  STND_ITEM_C AS STND_ITEM_C
        FROM    ADBASE
        WHERE   BASE_DATE   = #{BASE_DATE}
        <if test='STND_ITEM_C != null'>
            AND     STND_ITEM_C = #{STND_ITEM_C}
        </if>
    </select>

    <select id="selectFundCheck" parameterType="hashmap" resultType="hashmap">
        SELECT  STND_ITEM_C AS STND_ITEM_C
        FROM    ADFUND
        WHERE   BASE_DATE  = (SELECT MAX(BASE_DATE) FROM ADFUND WHERE BASE_DATE &lt;= #{BASE_DATE})
    </select>

    <select id="selectADESTMCheck" parameterType="hashmap" resultType="hashmap">
        SELECT  BASE_DATE   AS BASE_DATE
        FROM    ADESTM
        WHERE   BASE_DATE   = #{BASE_DATE}
    </select>

    <select id="selectADBSRTCheck" parameterType="hashmap" resultType="hashmap">
        SELECT  STND_ITEM_C   AS STND_ITEM_C
        FROM    ADBSRT
        WHERE   BASE_MONTH = SUBSTR(#{BASE_DATE}, 0, 6)
    </select>

    <select id="selectCommonCheck" parameterType="hashmap" resultType="hashmap" >
        SELECT 	I.STND_ITEM_C   AS STND_ITEM_C
        FROM    ADITEM 	I
        ,       ADPRIF 	P
        ,       ADEXRT 	E
        WHERE 	P.STND_ITEM_C = I.STND_ITEM_C
        AND 	P.BASE_DATE   = #{BASE_DATE}
        AND 	P.BASE_DATE   = E.BASE_DATE
        AND 	I.CUR_C 	  = E.CUR_C
        AND 	I.ASTS_GD_TC  IN (SELECT CODE FROM ADCDGR WHERE CODE_GROUP = 'STCK')
    </select>

    <select id="selectGetBatchId" parameterType="hashmap" resultType="hashmap" >
        SELECT 	FUNC_GET_RMKS('BATCH_ID', #{BATCH_ID}) AS CODE
        FROM 	DUAL
    </select>

    <insert id="insertADBAIF" parameterType="hashmap">
        INSERT INTO ADBAIF
        (       BATCH_ID
        ,       BATCH_PROC_TIME
        ,       BATCH_STATUS
        ,       LST_CHNG_NAME
        ,       LST_CHNG_TIME
        ) VALUES
        (       (SELECT FUNC_GET_RMKS('BATCH_ID', #{BATCH_ID}) FROM DUAL)
        ,       CURRENT_DATE
        ,       FUNC_FIND_CDNM('BATCH_STATUS', #{BATCH_STATUS})
        ,       'ADE'
        ,       CURRENT_DATE
        )
    </insert>

    <insert id="PROC_DELETE_ALL" parameterType="hashmap" statementType="CALLABLE">
        {
        CALL  ADMIN.PROC_DELETE_ALL(#{BASE_DATE, mode=IN, jdbcType=VARCHAR})
        }
    </insert>

        <select id="selectFundListByBaseDate" parameterType="hashmap" resultType="hashmap">
        SELECT  F.BASE_DATE                         AS BASE_DATE
        ,       F.STND_ITEM_C                       AS STND_ITEM_C
        ,       I.ITEM_SHORT                        AS ITEM_SHORT
        ,       F.TOT_BUY_AMT                       AS BUY_AMT
        ,       F.TOT_EST_AMT                       AS EST_AMT
        FROM 	ADFUND  F
        ,       ADITEM  I
        WHERE   F.BASE_DATE     = #{BASE_DATE}
        AND     F.STND_ITEM_C   = I.STND_ITEM_C
    </select>

    <insert id="insertFund" parameterType="hashmap">
	INSERT INTO ADE_FUND_BALANCE 
       	(	BASE_DATE
        ,       STND_ITEM_C
        ,       ITEM_NAME
        ,       TOT_BUY_AMT
        ,       TOT_EST_AMT
        ,       YIELD
        ,       LST_CHNG_NAME 
        ,       LST_CHNG_TIME
       	)
        SELECT  FUNC_ADD_DATE(BASE_DATE, 1)				AS BASE_DATE
        ,	I.STND_ITEM_C 						AS STND_ITEM_C
        ,	I.ITEM_NAME 						AS ITEM_NAME
        ,	F.TOT_BUY_AMT 						AS TOT_BUY_AMT
        ,	F.TOT_EST_AMT 						AS TOT_EST_AMT
        ,	(F.TOT_EST_AMT - F.TOT_BUY_AMT) / F.TOT_BUY_AMT 	AS YIELD
        ,	'ADE' 							AS LST_CHNG_NAME 
        ,	CURRENT_DATE 						AS LST_CHNG_TIME
        FROM 	ADFUND  F
        ,       ADITEM  I
        WHERE   F.BASE_DATE     = (SELECT MAX(BASE_DATE) FROM ADFUND WHERE BASE_DATE <= #{BASE_DATE})
        AND     F.STND_ITEM_C   = I.STND_ITEM_C
    </insert>
</mapper>
